version: '3.8'

services:
  predictive-maintenance:
    build: 
      context: ..      
      dockerfile: deployment/Dockerfile
    container_name: predictive-maintenance-app
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - FLASK_APP=run_api.py
      - PYTHONPATH=/app
    volumes:
      - ./models:/app/models
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - maintenance-network

  redis:
    image: redis:7-alpine
    container_name: predictive-maintenance-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    networks:
      - maintenance-network

  nginx:
    image: nginx:alpine
    container_name: predictive-maintenance-nginx
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - predictive-maintenance
    restart: unless-stopped
    networks:
      - maintenance-network

volumes:
  redis_data:
  model_data:
  log_data:

networks:
  maintenance-network:
    driver: bridge