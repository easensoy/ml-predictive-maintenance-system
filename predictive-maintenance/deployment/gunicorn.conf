# gunicorn.conf.py - Production WSGI Server Configuration
bind = "0.0.0.0:5000"
workers = 4
worker_class = "sync"
worker_connections = 1000
max_requests = 1000
max_requests_jitter = 100
timeout = 30
keepalive = 2
preload_app = True
user = "appuser"
group = "appuser"
access_log = "/app/logs/access.log"
error_log = "/app/logs/error.log"
log_level = "info"

# docker-entrypoint.sh - Container Startup Script
#!/bin/bash
set -e

# Initialize directories
mkdir -p /app/logs /app/models /app/data/raw /app/data/processed

# Check if models exist, if not train them
if [ ! -f "/app/models/best_model.pth" ]; then
    echo "Training model for first-time setup..."
    python train_model.py --generate-data --epochs 20
fi

# Start application
if [ "$FLASK_ENV" = "production" ]; then
    exec gunicorn --config gunicorn.conf.py run_api:app
else
    exec python run_api.py
fi

# nginx.conf - Reverse Proxy Configuration
events {
    worker_connections 1024;
}

http {
    upstream app {
        server predictive-maintenance:5000;
    }

    server {
        listen 80;
        server_name localhost;

        location / {
            proxy_pass http://app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /static/ {
            alias /app/web/static/;
            expires 30d;
        }
    }
}